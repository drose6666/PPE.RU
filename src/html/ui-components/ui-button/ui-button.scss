@mixin button (
   $padding: 19px 28px,
   $fontFamily: $Montserrat,
   $fontSize: 15px,
   $fontWeight: 700,
   $lineHeight: 100%,
   $minHeight: 54px,
   $background: var(--decorationBright),
   $color: var(--lightness),
   $border: 2px solid $color,
   $radius: $btnRadius,
   $hoverBorder: 2px solid var(--decorationDark),
   $hoverColor: var(--lightness),
   $hoverBg: var(--buttonHover),
   $hoverIconColor: $color,
   $hoverIconBg: none,
   $borderedMode: false,
   $coloredMode: false,
   $hasHeight: true,
   $textTransform: uppercase,
   $iconColor: $color,
   $iconBg: none,
)  {
   padding: $padding;
   font-family: $fontFamily;
   font-size: $fontSize;
   font-weight: $fontWeight;
   line-height: $lineHeight;
   text-transform: $textTransform;
   border-radius: $radius;
   position: relative;
   display: flex;
   align-items: center;
   justify-content: center;
   transition: all 0.2s ease-out;
   svg {
      margin-right: 14px;
      width: 16px;
      height: 16px;
      fill: $iconBg;
      stroke: $iconColor;
      stroke-width: 2;
      transition: all 0.2s ease-out;
   }

   @if $hasHeight {
      min-height: $minHeight;
      height: $minHeight;
   }

   @if $coloredMode {
      $borderedMode: false;
      background: $background;
      color: $color;
      &:hover {
         color: $hoverColor;
         box-shadow: var(--buttonHoverShadow);
         svg {
            stroke: $hoverIconColor;
            fill: $hoverIconBg;
         }
      }
   }

   @if $borderedMode {
      $coloredMode: false;
      border: $border;
      background: transparent;
      color: $color;
      &:hover {
         border: 2px solid transparent;
         color: $hoverColor;
         background: $hoverBg;
         box-shadow: var(--buttonHoverShadow);
         svg {
            stroke: $hoverIconColor;
            fill: $hoverIconBg;
         }
      }
   } 

}

// ! colorful button
.ui-btn[colored]  {
   @include button ( $coloredMode: true );
   &:before {
      content: "";
      position: absolute;
      width: 200%;
      height: 200%;
      top: 110%;
      left: 50%;
      background: var(--darkness);
      transform: translateX(-50%);
      border-radius: 50%;
      z-index: 0;
      transition: all 0.8s ease;
   }
   span, svg {
      position: relative;
      z-index: 1;
   }
   &:hover::before {
      top: -40%;
   }
}

// ! button with border
.ui-btn[bordered] {
   @include button (
      $borderedMode: true,
      $color: var(--decorationBright)
   )
}

// ! button with light border
.ui-btn[bordered-light] {
   @include button (
      $borderedMode: true,
      $border: 2px solid var(--lightness),
      $color: var(--lightness),
      $hoverBg: var(--lightness),
      $hoverColor: var(--decoration),
   )
}

// ! button with ripple click animation
.btn-ripple {
   overflow: hidden;
   .overlay-ripple {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;             
      height: 100%;
      background: transparent;
      border-radius: 50%;
      z-index: 2;
   }
   span.ripple {
      position: absolute;
      border-radius: 50%;
      transform: translate(-50%, -50%);
      background-color: rgba(255, 255, 255, 0.4);
      z-index: 0;
      animation: ripple 1.3s ease-out;
   }
   &[ripple-colorful] {
      span.ripple {
         background-color: rgba(172, 20, 16, 0.2);
      }
   }
}

@keyframes ripple {
   0% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(0);
   }
   100% {
      opacity: 0;
      transform: translate(-50%, -50%) scale(4);
   }
}