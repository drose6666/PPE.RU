/* 
  ! INSTRUCTION
  * каждой стрелке задается цветовая тема (lightMode, darkMode, colorMode) отдельно через миксин decArrow
  * цветовая тема при наведении задается через атрибуты (lightActive, darkActive, colorActive) элементам [has-children-parent] или .has-children
*/


@mixin decArrow (
   $centerY: true,
   $isRight: true,
   $top: 16px,
   $right: 15px,
   $left: 15px,
   $width: 13px,
   $color: var(--darkness),
   $duration: 0.2s,
   $colorHover: var(--lightness),
   $lightMode: false,
   $darkMode: false,
   $colorMode: false,
) {
   @if $centerY {
      top: 50%;
      transform: translateY(-50%);
   } @else {
      top: $top;
      transform: none;
   }

   @if $isRight {
      right: $right;
      left: auto;
   } @else {
      left: $left;
      right: auto;
   }
   position: absolute;
   width: $width;
   right: $right;
   &:before, &:after {
      content: '';
      position: absolute;
      top: 0;
      width: 8px;
      height: 1px;
      transition: all $duration ease-out;
   }
   &:before {
      left: 0;
      transform: rotate(45deg);
   }

   &:after {
      right: 0;
      transform: rotate(-45deg);
   }

   @if $darkMode {
      &:before, &:after {
         background: var(--darkness);
      }
   }

   @if $lightMode {
      &:before, &:after {
         background: var(--lightness);
      }
   }

   @if $colorMode {
      &:before, &:after {
         background: var(--decoration);
      }
   }
}




@mixin decArrowActive (
   $darkMode: false,
   $lightMode: false,
   $colorMode: false
) {
   &:before {
      transform: rotate(-45deg);
   }
   &:after {
      transform: rotate(45deg);
   }

   @if $darkMode {
      &:before, &:after { background: var(--darkness); }
      
   }
   @if $lightMode {
      &:before, &:after { background: var(--lightness); }
   }
   @if $colorMode {
      &:before, &:after { background: var(--decoration); }
   }
}


.has-children {
   position: relative;
}

.show-all .decArrow {
   @include decArrow($right: 0, $duration: 0.1s, $darkMode: true);
}

.specific-list h5 .decArrow {
   @include decArrow($right: 20px, $duration: 0.1s, $darkMode: true);
}

.mobile-catalog .decArrow {
   @include decArrow($right: 25px, $darkMode: true);
}

.mobile-menu[menu-2] .decArrow {
   @include decArrow($right: 25px, $lightMode: true);
}


[has-children-parent] {
   &[lightActive] {
      &.active {
         .decArrow { @include decArrowActive($lightMode: true) }
      }
      &:hover {
         .decArrow { &:before, &:after { background: var(--lightness); } }
      }
   }
   &[darkActive] {
      &.active {
         .decArrow { @include decArrowActive($darkMode: true) }
      }
      &:hover {
         .decArrow { &:before, &:after { background: var(--darkness); } }
      }
   }
   &[colorActive] {
      &.active {
         .decArrow { @include decArrowActive($colorMode: true) }
      }
      &:hover {
         .decArrow { &:before, &:after { background: var(--decoration); } }
      }
   }
}

.has-children {
   &[lightActive] {
      &.active {
         .decArrow { @include decArrowActive($lightMode: true) }
      }
      &:hover {
         .decArrow { &:before, &:after { background: var(--lightness); } }
      }
   }
   &[darkActive] {
      &.active {
         .decArrow { @include decArrowActive($darkMode: true) }
      }
      &:hover {
         .decArrow { &:before, &:after { background: var(--darkness); } }
      }
   }
   &[colorActive] {
      &.active {
         .decArrow { @include decArrowActive($colorMode: true) }
      }
      &:hover {
         .decArrow { &:before, &:after { background: var(--decoration); } }
      }
   }
}




// * Arrow scrollUp
.scrollUp-arrow {
   position: fixed;
   width: 50px;
   height: 50px;
   background: var(--decorationBright);
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 12px;
   color: var(--lightness);
   z-index: 2;
   border-radius: 50%;
   cursor: pointer;
   transition: opacity 1s ease, visibility 1s ease, bottom 1s ease, background 0.1s ease;
   &:hover {
      background: var(--decoration);
   }
   &:after {
      content: '';
      position: absolute;
      top: 100%;
      left: 5%;
      height: 10px;
      width: 90%;
      opacity: 1;
      background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0) 80%);
   }
   &.sticky {
      bottom: 100%;
      right: 50px;
      opacity: 0;
      visibility: hidden;
      &.active {
         bottom: 30px;
         opacity: 1;
         visibility: visible;
         transition: opacity 1s ease, visibility 1s ease, bottom 1s ease, background 0.1s ease;
      }
   }
}